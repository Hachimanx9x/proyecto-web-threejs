{"version":3,"sources":["Logos/Group102.png","logo.svg","Components/Login/Login.js","Components/Registro/SignIn.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Login","state","inputName","inputPass","className","for","type","class","id","aria-label","placeholder","href","role","alt","src","require","Component","SigIn","inputEmail","inputConfirmPass","App","exact","path","component","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.4cdd5946.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/Group102.8d5d6afa.png\";","module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","import React, { Component } from \"react\";\r\nimport \"./Login.css\";\r\n\r\nclass Login extends Component {\r\n  constructor() {\r\n    super();\r\n    this.state = { inputName: \"\" };\r\n    this.state = { inputPass: \"\" };\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"o-big-container\">\r\n        <div className=\"o-login\">\r\n          <form>\r\n            <h3 className=\"text-white m-0\">El mejor lugar</h3>\r\n            <h3 className=\"text-white m-0\">Para tu trabajar con tu equipo</h3>\r\n            <p className=\"mt-2 mb-8 text-white font-weight-bold \">\r\n              Bienvenido, por favor ingresa con tu cuenta\r\n            </p>\r\n            <div className=\"row\">\r\n              <div className=\"form-group col-md-12 input-group-lg\">\r\n                <label for=\"useName\" className=\"font-weight-bold text-info\">\r\n                  Correo\r\n                </label>\r\n                <input\r\n                  type=\"email\"\r\n                  class=\"form-control bg-transparent o-textbox mt-2 text-white o-input\"\r\n                  id=\"userName\"\r\n                  aria-label=\"Large\"\r\n                  placeholder=\"Correo\"\r\n                />\r\n              </div>\r\n            </div>\r\n            <div className=\"row\">\r\n              <div className=\"form-group col-md-12 input-group-lg\">\r\n                <label for=\"useName\" className=\"font-weight-bold text-info\">\r\n                  Contraseña\r\n                </label>\r\n                <input\r\n                  type=\"password\"\r\n                  class=\"form-control bg-transparent o-textbox mt-2 text-white \"\r\n                  id=\"userPassword\"\r\n                  aria-label=\"Large\"\r\n                  placeholder=\"Contraseña\"\r\n                />\r\n              </div>\r\n            </div>\r\n\r\n            <div className=\"form-row\">\r\n              <div class=\"form-check mr-4\">\r\n                <input type=\"checkbox\" class=\"form-check-input o-check\" />\r\n                <label class=\"form-check-label font-weight-bold  text-info\">\r\n                  Remember me\r\n                </label>\r\n              </div>\r\n              <div className=\"col-sm ml-5\">\r\n                <a className=\"text-info font-weight-bold \" href=\"#\">\r\n                  Olvidaste tu contraseña?\r\n                </a>\r\n              </div>\r\n            </div>\r\n            <div className=\"o-buttons\">\r\n              <button\r\n                className=\"btn btn-primary mt-4 o-btn font-weight-bold btn-lg\"\r\n                type=\"submit\"\r\n              >\r\n                Ingresar\r\n              </button>\r\n\r\n              <a\r\n                className=\"btn btn-light mt-4 btn-lg text-primary font-weight-bold ml-3\"\r\n                href=\"/Signin\"\r\n                role=\"button\"\r\n              >\r\n                Registrarse\r\n              </a>\r\n            </div>\r\n          </form>\r\n        </div>\r\n        <div className=\"o-mid-container\">\r\n          <img\r\n            className=\"o-background-img\"\r\n            alt=\"imagen login\"\r\n            src={require(\"../../Logos/Group102.png\")}\r\n          />\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Login;\r\n","import React, { Component } from \"react\";\r\nimport \"./SignIn.css\";\r\n\r\nclass SigIn extends Component {\r\n  constructor() {\r\n    super();\r\n    this.state = { inputName: \"\" };\r\n    this.state = { inputEmail: \"\" };\r\n    this.state = { inputPass: \"\" };\r\n    this.state = { inputConfirmPass: \"\" };\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"o-big-container\">\r\n        <div className=\"o-sigIn\">\r\n          <form>\r\n            <h3 className=\"text-white m-0\">El mejor lugar</h3>\r\n            <h3 className=\"text-white m-0\">Para tu trabajar con tu equipo</h3>\r\n            <p className=\"mt-2 mb-8 text-white font-weight-bold \">\r\n              Bienvenido, por favor registrarte\r\n            </p>\r\n            <div className=\"row\">\r\n              <div className=\"form-group col-md-12 input-group-lg\">\r\n                <label for=\"userName\" className=\"font-weight-bold text-info\">\r\n                  Nombre\r\n                </label>\r\n                <input\r\n                  type=\"text\"\r\n                  class=\"form-control bg-transparent o-textbox mt-2 text-white o-input\"\r\n                  id=\"userName\"\r\n                  aria-label=\"Large\"\r\n                  placeholder=\"Nombre\"\r\n                />\r\n              </div>\r\n            </div>\r\n            <div className=\"row\">\r\n              <div className=\"form-group col-md-12 input-group-lg\">\r\n                <label for=\"email\" className=\"font-weight-bold text-info\">\r\n                  Correo\r\n                </label>\r\n                <input\r\n                  type=\"email\"\r\n                  class=\"form-control bg-transparent o-textbox mt-2 text-white \"\r\n                  id=\"userEmail\"\r\n                  aria-label=\"Large\"\r\n                  placeholder=\"Correo\"\r\n                />\r\n              </div>\r\n            </div>\r\n            <div className=\"row\">\r\n              <div className=\"form-group col-md-12 input-group-lg\">\r\n                <label for=\"password\" className=\"font-weight-bold text-info\">\r\n                  Contraseña\r\n                </label>\r\n                <input\r\n                  type=\"password\"\r\n                  class=\"form-control bg-transparent o-textbox mt-2 text-white o-input\"\r\n                  id=\"userPassword\"\r\n                  aria-label=\"Large\"\r\n                  placeholder=\"Contraseña\"\r\n                />\r\n              </div>\r\n            </div>\r\n            <div className=\"row\">\r\n              <div className=\"form-group col-md-12 input-group-lg\">\r\n                <label for=\"password\" className=\"font-weight-bold text-info\">\r\n                  Confirmar Contraseña\r\n                </label>\r\n                <input\r\n                  type=\"password\"\r\n                  class=\"form-control bg-transparent o-textbox mt-2 text-white \"\r\n                  id=\"userConfirmPassword\"\r\n                  aria-label=\"Large\"\r\n                  placeholder=\"Confirmar Contraseña\"\r\n                />\r\n              </div>\r\n            </div>\r\n\r\n            <div className=\"form-row\">\r\n              <div className=\"col-sm \">\r\n                <a className=\"text-info font-weight-bold \" href=\"/\">\r\n                  Ya tienes cuenta? Ingresa con ella.\r\n                </a>\r\n              </div>\r\n            </div>\r\n            <div className=\"o-buttons\">\r\n              <button\r\n                className=\"btn btn-primary mt-4 o-btn font-weight-bold btn-lg\"\r\n                type=\"submit\"\r\n              >\r\n                Registrarse\r\n              </button>\r\n\r\n              <a\r\n                className=\"btn btn-light mt-4 btn-lg text-primary font-weight-bold ml-3\"\r\n                href=\"/\"\r\n                role=\"button\"\r\n              >\r\n                Cancelar\r\n              </a>\r\n            </div>\r\n          </form>\r\n        </div>\r\n        <div className=\"o-mid-container\">\r\n          <img\r\n            className=\"o-background-img\"\r\n            alt=\"imagen login\"\r\n            src={require(\"../../Logos/Group102.png\")}\r\n          />\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default SigIn;\r\n","import React from \"react\";\nimport logo from \"./logo.svg\";\nimport \"./App.css\";\nimport Login from \"./Components/Login/Login\";\nimport SigIn from \"./Components/Registro/SignIn\";\nimport { BrowserRouter as Router, Switch, Route, Link } from \"react-router-dom\";\n\nfunction App() {\n  return (\n    <Router>\n      <Switch>\n        <Route exact path=\"/\" component={Login} />\n        <Route path=\"/SignIn\" component={SigIn} />\n      </Switch>\n    </Router>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport '../node_modules/bootstrap/dist/css/bootstrap.min.css'; // Archivo CSS de Bootstrap 4 \nimport '../node_modules/bootstrap/dist/js/bootstrap.min.js'; // Archivo Javascript de Bootstrap 4\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}